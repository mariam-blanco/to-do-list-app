{"version":3,"sources":["components/TasksListDate/TasksListDate.js","components/Task/Task.js","components/TasksList/TasksList.js","components/AddTask/AddTask.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["TasksListDate","className","Task","id","title","isCompleted","completeTask","removeTask","removeBtn","onClick","type","TasksList","tasks","map","task","AddTask","addNewTask","updateTasksList","onSubmit","event","preventDefault","onChange","newTask","target","value","length","name","App","dataStored","JSON","parse","localStorage","getItem","useState","setTask","tasksList","setTasksList","useEffect","setItem","stringify","taskId","index","arr","newTasksList","filter","Date","now","prev","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c0fea7a.chunk.js","sourcesContent":["import React from 'react';\nimport './TasksListDate.css';\n\nconst TasksListDate = () => {\n  return (\n    <div className=\"date\">\n      <div className=\"month-number\">27</div>\n      <div>\n        <p className=\"week-day\">Tuesday</p>\n        <p className=\"month\">October</p>\n      </div>\n    </div>\n  )\n}\n\nexport default TasksListDate;\n\n","import React from 'react';\nimport './Task.css';\n\nconst Task = ({id, title, isCompleted, completeTask, removeTask}) => {\n    \n    const handleComplete = (taskId) => {\n      completeTask(taskId);\n    }\n    \n    const handleRemove = (taskId) => {\n      removeTask(taskId);\n    }\n\n    const removeBtn = (\n      <button \n        onClick={() => handleRemove(id)} \n        className=\"btn-delete-task\" \n        type=\"button\" >\n          &times;\n        </button>\n    );\n    \n  return (\n      <li  \n        className={`todo-list-item${isCompleted ? \" completed\" : \"\"}`}\n      >\n        <i \n          onClick={() => handleComplete(id)} \n          className={`icon ${isCompleted ? \"far fa-check-circle\" : \"\"}`}\n        >\n        </i>\n        <p className=\"task\">{title}</p>\n        { isCompleted && removeBtn } \n      </li>\n  )\n}\n\nexport default Task;","import React from 'react';\nimport TasksListDate from '../TasksListDate/TasksListDate';\nimport Task from '../Task/Task';\nimport './TasksList.css';\n\nconst TasksList = ({tasks, completeTask, removeTask}) => {\n  \n  return (\n    <div className=\"todo-list\">\n      <TasksListDate />\n      <ul>\n        {\n          tasks.map(task => {\n            return (\n              <Task\n                key={task.id} \n                id={task.id}\n                title={task.title}\n                isCompleted={task.isCompleted} \n                completeTask={completeTask} \n                removeTask={removeTask}\n              />\n            )\n          }) \n        }\n      </ul>\n    </div>\n  )\n}\n\nexport default TasksList;","import React from 'react';\nimport './AddTask.css';\n\nconst AddTask = ({addNewTask, task, updateTasksList}) => {\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    !task.title || updateTasksList();\n  }\n\n  const handleChange = (event) => {\n    let newTask = event.target.value;\n    !newTask.length || addNewTask(newTask);  \n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"add-task\">\n      <input \n        onChange={handleChange} \n        value= {task.title || ''}\n        name=\"task\"\n        type=\"text\" \n      />\n      <div className=\"btn-container\">\n        <button type=\"submit\" className=\"btn-add extended\">\n          <span className=\"icon-add\">+</span>\n          <span className=\"label-add\">ADD TASK</span> \n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default AddTask;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TasksList from '../TasksList/TasksList';\nimport AddTask from '../AddTask/AddTask';\n\nconst App = () => {\n\n  const dataStored = JSON.parse(localStorage.getItem('dataStored'));\n\n  const [task, setTask] = useState({});\n  const [tasksList, setTasksList] = useState(dataStored || []);\n  \n  useEffect(() => {\n    localStorage.setItem('dataStored', JSON.stringify(tasksList));\n    \n  }, [tasksList]);\n  \n  const addNewTask = (newTask) => {\n    setTask({\n      id: Date.now(),\n      title: newTask,\n      isCompleted: false\n    });\n  }\n    \n  const updateTasksList = () => {\n    setTasksList((prev) => {\n      return [ ...prev, task ]; \n    });\n    setTask(\"\");  \n  }   \n  \n  const completeTask = (taskId) => {  \n    setTasksList(\n      tasksList.map((task, index, arr) => {\n        if (task.id === taskId) {\n          return {\n            ...task,\n            isCompleted:true}\n        } else {\n          return task\n        }\n      })\n    );\n  }\n  \n  const removeTask = (taskId) => {\n    let newTasksList = tasksList.filter((task) => task.id !== taskId);\n    setTasksList(newTasksList);\n  }\n  \n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1>to-do list</h1>\n      </div>\n      <TasksList \n        tasks = {tasksList} \n        completeTask = {completeTask}\n        removeTask = {removeTask} \n      />\n      <AddTask\n        task = {task} \n        addNewTask = {addNewTask} \n        updateTasksList = {updateTasksList} \n      />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}